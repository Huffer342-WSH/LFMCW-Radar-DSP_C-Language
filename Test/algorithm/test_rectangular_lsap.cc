#include "rectangular_lsap.hh"
#include <cstdio>

#define NR 17
#define NC 14
double cost[17][14] = {
    { 94.0, 0.0, 77.0, 54.0, 71.0, 36.0, 16.0, 4.0, 25.0, 89.0, 41.0, 14.0, 39.0, 77.0 },
    { 40.0, 90.0, 84.0, 2.0, 18.0, 13.0, 29.0, 81.0, 10.0, 86.0, 4.0, 80.0, 21.0, 41.0 },
    { 80.0, 50.0, 37.0, 69.0, 87.0, 24.0, 36.0, 5.0, 65.0, 31.0, 77.0, 68.0, 84.0, 23.0 },
    { 78.0, 12.0, 36.0, 28.0, 91.0, 24.0, 33.0, 66.0, 73.0, 41.0, 55.0, 55.0, 87.0, 47.0 },
    { 61.0, 42.0, 7.0, 78.0, 19.0, 62.0, 24.0, 70.0, 92.0, 23.0, 1.0, 65.0, 94.0, 31.0 },
    { 58.0, 81.0, 95.0, 37.0, 16.0, 99.0, 37.0, 21.0, 65.0, 70.0, 4.0, 26.0, 93.0, 19.0 },
    { 44.0, 70.0, 47.0, 61.0, 30.0, 3.0, 57.0, 64.0, 42.0, 52.0, 81.0, 18.0, 59.0, 95.0 },
    { 86.0, 33.0, 13.0, 85.0, 13.0, 55.0, 81.0, 62.0, 1.0, 54.0, 42.0, 71.0, 3.0, 3.0 },
    { 78.0, 7.0, 99.0, 59.0, 48.0, 29.0, 21.0, 49.0, 72.0, 7.0, 12.0, 45.0, 40.0, 53.0 },
    { 14.0, 69.0, 41.0, 48.0, 53.0, 85.0, 76.0, 59.0, 77.0, 79.0, 16.0, 52.0, 1.0, 82.0 },
    { 75.0, 8.0, 66.0, 41.0, 14.0, 58.0, 72.0, 69.0, 56.0, 1.0, 2.0, 21.0, 24.0, 15.0 },
    { 19.0, 27.0, 41.0, 57.0, 18.0, 85.0, 40.0, 71.0, 95.0, 65.0, 80.0, 37.0, 72.0, 56.0 },
    { 78.0, 84.0, 12.0, 68.0, 24.0, 65.0, 41.0, 97.0, 64.0, 23.0, 78.0, 72.0, 62.0, 30.0 },
    { 39.0, 15.0, 51.0, 72.0, 19.0, 55.0, 74.0, 5.0, 13.0, 98.0, 51.0, 12.0, 72.0, 12.0 },
    { 37.0, 35.0, 26.0, 8.0, 73.0, 66.0, 83.0, 93.0, 80.0, 64.0, 6.0, 33.0, 5.0, 44.0 },
    { 50.0, 52.0, 24.0, 36.0, 53.0, 0.0, 78.0, 0.0, 4.0, 93.0, 93.0, 51.0, 85.0, 15.0 },
    { 19.0, 56.0, 89.0, 83.0, 45.0, 28.0, 54.0, 45.0, 22.0, 6.0, 68.0, 45.0, 49.0, 13.0 },
};

int64_t ref_row_ind[14] = { 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15 };
int64_t ref_col_ind[14] = { 1, 3, 7, 2, 10, 5, 13, 6, 0, 9, 4, 11, 12, 8 };

int main(int argc, char **argv)
{
    int nr = NR;
    int nc = NC;
    double *input_cost = cost[0];
    bool maximize = false;

    int64_t a[NR];
    int64_t b[NR];
    int64_t num = solve_rectangular_linear_sum_assignment(nr, nc, (double *)cost, 0, a, b);

    for (size_t i = 0; i < num; i++) {
        printf("[%3jd %3jd]\n", a[i], b[i]);
    }
}
